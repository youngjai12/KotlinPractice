[2023-02-19T14:43:38.641] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 99610 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T14:43:38.643] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T14:43:39.097] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T14:43:39.304] [] INFO  Started PioneerClientTest in 1.008 seconds (JVM running for 2.129) 
[2023-02-19T14:43:39.761] [] INFO  ####### initialized server ### 
[2023-02-19T14:43:39.761] [] INFO  9443 started on port: 9443 
[2023-02-19T14:43:40.255] [] INFO  9443 creating expectation:

  {
    "id" : "8490c676-bd37-4413-b843-b7f2da907ae7",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  8490c676-bd37-4413-b843-b7f2da907ae7
 
[2023-02-19T14:43:40.314] [] INFO  9443 creating expectation:

  {
    "id" : "e55cc620-87d9-4488-8994-8b473d768e86",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  e55cc620-87d9-4488-8994-8b473d768e86
 
[2023-02-19T14:43:40.742] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T14:43:40.744] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "8490c676-bd37-4413-b843-b7f2da907ae7",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T14:43:40.748] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  8490c676-bd37-4413-b843-b7f2da907ae7
 
[2023-02-19T14:43:40.762] [] INFO  ### stockCode : null 
[2023-02-19T14:43:40.768] [] INFO  nothing JSON decoding error: Unknown signal type: null; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unknown signal type: null 
[2023-02-19T14:48:21.184] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 3110 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T14:48:21.185] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T14:48:21.732] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T14:48:22.329] [] INFO  Started PioneerClientTest in 1.491 seconds (JVM running for 2.666) 
[2023-02-19T14:48:23.813] [] INFO  ####### initialized server ### 
[2023-02-19T14:48:23.815] [] INFO  9443 started on port: 9443 
[2023-02-19T14:48:24.745] [] INFO  9443 creating expectation:

  {
    "id" : "e62209cb-10bd-4c90-9535-9af38ef69929",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  e62209cb-10bd-4c90-9535-9af38ef69929
 
[2023-02-19T14:48:24.827] [] INFO  9443 creating expectation:

  {
    "id" : "46e8b535-67e1-412d-858d-22b6afd3e23e",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  46e8b535-67e1-412d-858d-22b6afd3e23e
 
[2023-02-19T14:48:25.434] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T14:48:25.436] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "e62209cb-10bd-4c90-9535-9af38ef69929",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T14:48:25.439] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  e62209cb-10bd-4c90-9535-9af38ef69929
 
[2023-02-19T14:48:25.455] [] INFO  ### stockCode : AAPL 
[2023-02-19T14:48:25.472] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$DomesticPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$DomesticPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 40] 
[2023-02-19T14:49:23.203] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 3692 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T14:49:23.204] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T14:49:23.652] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T14:49:23.962] [] INFO  Started PioneerClientTest in 1.094 seconds (JVM running for 2.286) 
[2023-02-19T14:49:24.894] [] INFO  ####### initialized server ### 
[2023-02-19T14:49:24.895] [] INFO  9443 started on port: 9443 
[2023-02-19T14:49:25.461] [] INFO  9443 creating expectation:

  {
    "id" : "970183b8-042e-4213-a82a-8d7ee1fa7c8d",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  970183b8-042e-4213-a82a-8d7ee1fa7c8d
 
[2023-02-19T14:49:25.521] [] INFO  9443 creating expectation:

  {
    "id" : "d50fb36f-69c1-4a83-880c-0b407bb7cc18",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  d50fb36f-69c1-4a83-880c-0b407bb7cc18
 
[2023-02-19T14:49:25.934] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T14:49:25.937] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "970183b8-042e-4213-a82a-8d7ee1fa7c8d",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T14:49:25.940] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  970183b8-042e-4213-a82a-8d7ee1fa7c8d
 
[2023-02-19T14:49:25.957] [] INFO  ### stockCode : AAPL 
[2023-02-19T14:49:25.971] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 40] 
[2023-02-19T14:51:56.420] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 5369 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T14:51:56.422] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T14:51:56.866] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T14:51:57.083] [] INFO  Started PioneerClientTest in 0.964 seconds (JVM running for 2.068) 
[2023-02-19T14:51:57.555] [] INFO  ####### initialized server ### 
[2023-02-19T14:51:57.556] [] INFO  9443 started on port: 9443 
[2023-02-19T14:51:58.060] [] INFO  9443 creating expectation:

  {
    "id" : "b123ce15-ce98-402c-a354-af8a66ccd3ec",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  b123ce15-ce98-402c-a354-af8a66ccd3ec
 
[2023-02-19T14:51:58.123] [] INFO  9443 creating expectation:

  {
    "id" : "ba934ccf-77a1-475e-a559-c6152144c94d",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  ba934ccf-77a1-475e-a559-c6152144c94d
 
[2023-02-19T14:51:58.534] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T14:51:58.537] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "b123ce15-ce98-402c-a354-af8a66ccd3ec",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T14:51:58.540] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  b123ce15-ce98-402c-a354-af8a66ccd3ec
 
[2023-02-19T14:51:58.556] [] INFO  ### stockCode : AAPL 
[2023-02-19T14:51:58.570] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 40] 
[2023-02-19T14:55:26.907] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 7607 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T14:55:26.909] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T14:55:27.332] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T14:55:27.541] [] INFO  Started PioneerClientTest in 0.948 seconds (JVM running for 2.03) 
[2023-02-19T14:55:27.984] [] INFO  ####### initialized server ### 
[2023-02-19T14:55:27.985] [] INFO  9443 started on port: 9443 
[2023-02-19T14:55:28.448] [] INFO  9443 creating expectation:

  {
    "id" : "de7355d6-9895-45f6-93af-d851302a62c0",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  de7355d6-9895-45f6-93af-d851302a62c0
 
[2023-02-19T14:55:28.514] [] INFO  9443 creating expectation:

  {
    "id" : "a1c56d58-d909-41cb-917b-6653a4afe47c",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  a1c56d58-d909-41cb-917b-6653a4afe47c
 
[2023-02-19T14:55:29.078] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T14:55:29.080] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "de7355d6-9895-45f6-93af-d851302a62c0",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T14:55:29.085] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  de7355d6-9895-45f6-93af-d851302a62c0
 
[2023-02-19T14:55:29.098] [] INFO  ### stockCode : AAPL 
[2023-02-19T14:55:29.114] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 40] 
[2023-02-19T14:58:17.420] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 9395 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T14:58:17.422] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T14:58:17.894] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T14:58:18.176] [] INFO  Started PioneerClientTest in 1.099 seconds (JVM running for 2.544) 
[2023-02-19T14:58:18.675] [] INFO  ####### initialized server ### 
[2023-02-19T14:58:18.676] [] INFO  9443 started on port: 9443 
[2023-02-19T14:58:19.197] [] INFO  9443 creating expectation:

  {
    "id" : "7c520aee-80c1-4e90-9f1e-2c7f3c4fc847",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  7c520aee-80c1-4e90-9f1e-2c7f3c4fc847
 
[2023-02-19T14:58:19.265] [] INFO  9443 creating expectation:

  {
    "id" : "d2dfe215-634f-463e-a157-98934d51bdca",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  d2dfe215-634f-463e-a157-98934d51bdca
 
[2023-02-19T14:58:19.690] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T14:58:19.692] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "7c520aee-80c1-4e90-9f1e-2c7f3c4fc847",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T14:58:19.696] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  7c520aee-80c1-4e90-9f1e-2c7f3c4fc847
 
[2023-02-19T14:58:19.714] [] INFO  ### stockCode : AAPL 
[2023-02-19T14:59:20.566] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 10069 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T14:59:20.568] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T14:59:21.386] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T14:59:21.780] [] INFO  Started PioneerClientTest in 1.57 seconds (JVM running for 2.882) 
[2023-02-19T14:59:22.429] [] INFO  ####### initialized server ### 
[2023-02-19T14:59:22.430] [] INFO  9443 started on port: 9443 
[2023-02-19T14:59:22.972] [] INFO  9443 creating expectation:

  {
    "id" : "8c88cf00-9abb-42ee-8d86-54e8172a8bbc",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  8c88cf00-9abb-42ee-8d86-54e8172a8bbc
 
[2023-02-19T14:59:23.038] [] INFO  9443 creating expectation:

  {
    "id" : "8cba32dc-234c-4405-b936-58e15e54b5b0",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  8cba32dc-234c-4405-b936-58e15e54b5b0
 
[2023-02-19T14:59:23.456] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T14:59:23.459] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "8c88cf00-9abb-42ee-8d86-54e8172a8bbc",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T14:59:23.463] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  8c88cf00-9abb-42ee-8d86-54e8172a8bbc
 
[2023-02-19T14:59:23.484] [] INFO  ### stockCode : AAPL 
[2023-02-19T15:20:20.618] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 23531 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T15:20:20.620] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T15:20:21.079] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T15:20:21.303] [] INFO  Started PioneerClientTest in 0.998 seconds (JVM running for 2.179) 
[2023-02-19T15:20:21.822] [] INFO  ####### initialized server ### 
[2023-02-19T15:20:21.823] [] INFO  9443 started on port: 9443 
[2023-02-19T15:20:37.634] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 23651 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T15:20:37.636] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T15:20:38.353] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T15:20:38.858] [] INFO  Started PioneerClientTest in 1.743 seconds (JVM running for 2.944) 
[2023-02-19T15:20:40.279] [] INFO  ####### initialized server ### 
[2023-02-19T15:20:40.280] [] INFO  9443 started on port: 9443 
[2023-02-19T15:20:41.278] [] INFO  9443 creating expectation:

  {
    "id" : "9ae3b9e9-a77d-4fef-a412-a69d1b4e4ba7",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  9ae3b9e9-a77d-4fef-a412-a69d1b4e4ba7
 
[2023-02-19T15:20:41.355] [] INFO  9443 creating expectation:

  {
    "id" : "cf3aee73-0070-4895-9ce5-85b27a72bc01",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  cf3aee73-0070-4895-9ce5-85b27a72bc01
 
[2023-02-19T15:20:41.854] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T15:20:41.857] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "9ae3b9e9-a77d-4fef-a412-a69d1b4e4ba7",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T15:20:41.861] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  9ae3b9e9-a77d-4fef-a412-a69d1b4e4ba7
 
[2023-02-19T15:20:41.878] [] INFO  ### stockCode : AAPL 
[2023-02-19T15:20:41.893] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 40] 
[2023-02-19T15:24:40.191] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 26223 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T15:24:40.192] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T15:24:40.669] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T15:24:40.902] [] INFO  Started PioneerClientTest in 1.038 seconds (JVM running for 2.246) 
[2023-02-19T15:24:41.361] [] INFO  ####### initialized server ### 
[2023-02-19T15:24:41.362] [] INFO  9443 started on port: 9443 
[2023-02-19T15:24:41.849] [] INFO  9443 creating expectation:

  {
    "id" : "67acf5d9-1f16-4dfa-bfe1-f246ebb69e2c",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  67acf5d9-1f16-4dfa-bfe1-f246ebb69e2c
 
[2023-02-19T15:24:41.907] [] INFO  9443 creating expectation:

  {
    "id" : "20214768-5a28-4af0-9fb7-126aae698d6a",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  20214768-5a28-4af0-9fb7-126aae698d6a
 
[2023-02-19T15:24:42.719] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T15:24:42.721] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "67acf5d9-1f16-4dfa-bfe1-f246ebb69e2c",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T15:24:42.726] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  67acf5d9-1f16-4dfa-bfe1-f246ebb69e2c
 
[2023-02-19T15:24:42.741] [] INFO  ### stockCode : AAPL 
[2023-02-19T15:24:42.754] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 40] 
[2023-02-19T15:26:37.846] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 27559 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T15:26:37.847] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T15:26:38.271] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T15:26:38.476] [] INFO  Started PioneerClientTest in 0.932 seconds (JVM running for 2.021) 
[2023-02-19T15:26:38.931] [] INFO  ####### initialized server ### 
[2023-02-19T15:26:38.932] [] INFO  9443 started on port: 9443 
[2023-02-19T15:26:39.399] [] INFO  9443 creating expectation:

  {
    "id" : "5b5a5dcc-3443-4382-a2a9-5456c6d82900",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  5b5a5dcc-3443-4382-a2a9-5456c6d82900
 
[2023-02-19T15:26:39.456] [] INFO  9443 creating expectation:

  {
    "id" : "34fc53c4-ad99-4b23-96ac-4b48338eac2b",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  34fc53c4-ad99-4b23-96ac-4b48338eac2b
 
[2023-02-19T15:26:39.853] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T15:26:39.855] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "5b5a5dcc-3443-4382-a2a9-5456c6d82900",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T15:26:39.858] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  5b5a5dcc-3443-4382-a2a9-5456c6d82900
 
[2023-02-19T15:26:39.872] [] INFO  ### stockCode : AAPL 
[2023-02-19T15:26:39.885] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 40] 
[2023-02-19T15:33:21.379] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 31804 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T15:33:21.380] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T15:33:21.812] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T15:33:22.041] [] INFO  Started PioneerClientTest in 1.019 seconds (JVM running for 2.167) 
[2023-02-19T15:33:22.517] [] INFO  ####### initialized server ### 
[2023-02-19T15:33:22.518] [] INFO  9443 started on port: 9443 
[2023-02-19T15:33:23.035] [] INFO  9443 creating expectation:

  {
    "id" : "a11753b2-4572-409f-9a5a-36edf7f8b7c9",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  a11753b2-4572-409f-9a5a-36edf7f8b7c9
 
[2023-02-19T15:33:23.668] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T15:33:23.670] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "a11753b2-4572-409f-9a5a-36edf7f8b7c9",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T15:33:23.673] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  a11753b2-4572-409f-9a5a-36edf7f8b7c9
 
[2023-02-19T15:33:23.689] [] INFO  ### stockCode : AAPL 
[2023-02-19T15:33:23.702] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 40] 
[2023-02-19T15:34:31.429] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 32595 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T15:34:31.431] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T15:34:31.848] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T15:34:32.067] [] INFO  Started PioneerClientTest in 0.943 seconds (JVM running for 2.024) 
[2023-02-19T15:34:32.506] [] INFO  ####### initialized server ### 
[2023-02-19T15:34:32.507] [] INFO  9443 started on port: 9443 
[2023-02-19T15:34:32.987] [] INFO  9443 creating expectation:

  {
    "id" : "f21103cd-b8c0-4a7a-8404-ce6692540040",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  f21103cd-b8c0-4a7a-8404-ce6692540040
 
[2023-02-19T15:34:33.389] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T15:34:33.392] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "f21103cd-b8c0-4a7a-8404-ce6692540040",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T15:34:33.395] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  f21103cd-b8c0-4a7a-8404-ce6692540040
 
[2023-02-19T15:34:33.416] [] INFO  nothing Type definition error: [simple type, class com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate` (no Creators, like default constructor, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 1] 
[2023-02-19T15:49:34.762] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 42186 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T15:49:34.763] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T15:49:35.429] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T15:49:35.766] [] INFO  Started PioneerClientTest in 1.339 seconds (JVM running for 2.488) 
[2023-02-19T15:49:36.254] [] INFO  ####### initialized server ### 
[2023-02-19T15:49:36.255] [] INFO  9443 started on port: 9443 
[2023-02-19T15:49:36.770] [] INFO  9443 creating expectation:

  {
    "id" : "42b9c432-a424-4bd7-a28d-945a6ef68e39",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  42b9c432-a424-4bd7-a28d-945a6ef68e39
 
[2023-02-19T15:49:37.204] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T15:49:37.206] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "42b9c432-a424-4bd7-a28d-945a6ef68e39",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T15:49:37.210] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  42b9c432-a424-4bd7-a28d-945a6ef68e39
 
[2023-02-19T15:49:37.226] [] INFO  ### stockCode : AAPL 
[2023-02-19T15:49:37.240] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 40] 
[2023-02-19T15:57:22.201] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 47201 (started by kakao in /Users/kakao/yjgit/practice) 
[2023-02-19T15:57:22.202] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T15:57:22.664] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T15:57:22.883] [] INFO  Started PioneerClientTest in 1.007 seconds (JVM running for 2.146) 
[2023-02-19T15:57:23.388] [] INFO  ####### initialized server ### 
[2023-02-19T15:57:23.389] [] INFO  9443 started on port: 9443 
[2023-02-19T15:57:23.904] [] INFO  9443 creating expectation:

  {
    "id" : "1422d9df-9c54-4ab5-8b77-65d9a8957174",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  1422d9df-9c54-4ab5-8b77-65d9a8957174
 
[2023-02-19T15:57:24.363] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T15:57:24.365] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "1422d9df-9c54-4ab5-8b77-65d9a8957174",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T15:57:24.369] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  1422d9df-9c54-4ab5-8b77-65d9a8957174
 
[2023-02-19T15:57:24.386] [] INFO  ### stockCode : AAPL 
[2023-02-19T15:57:24.395] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 40] 
[2023-02-19T16:20:19.481] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 62629 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T16:20:19.482] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T16:20:19.912] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T16:20:20.135] [] INFO  Started PioneerClientTest in 0.965 seconds (JVM running for 2.179) 
[2023-02-19T16:20:20.592] [] INFO  ####### initialized server ### 
[2023-02-19T16:20:20.593] [] INFO  9443 started on port: 9443 
[2023-02-19T16:20:21.092] [] INFO  9443 creating expectation:

  {
    "id" : "abb4db14-61ba-45a9-8015-1a525efee84f",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  abb4db14-61ba-45a9-8015-1a525efee84f
 
[2023-02-19T16:20:21.729] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T16:20:21.732] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "abb4db14-61ba-45a9-8015-1a525efee84f",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T16:20:21.736] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  abb4db14-61ba-45a9-8015-1a525efee84f
 
[2023-02-19T16:20:21.753] [] INFO  ### stockCode : AAPL 
[2023-02-19T16:20:21.763] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 40] 
[2023-02-19T16:25:59.430] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 66295 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T16:25:59.431] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T16:25:59.895] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T16:26:00.135] [] INFO  Started PioneerClientTest in 1.039 seconds (JVM running for 2.319) 
[2023-02-19T16:26:00.634] [] INFO  ####### initialized server ### 
[2023-02-19T16:26:00.635] [] INFO  9443 started on port: 9443 
[2023-02-19T16:26:01.195] [] INFO  9443 creating expectation:

  {
    "id" : "2fc28f42-1418-4966-ac03-a088ccbceea2",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  2fc28f42-1418-4966-ac03-a088ccbceea2
 
[2023-02-19T16:26:01.816] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T16:26:01.819] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "2fc28f42-1418-4966-ac03-a088ccbceea2",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T16:26:01.822] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  2fc28f42-1418-4966-ac03-a088ccbceea2
 
[2023-02-19T16:26:01.839] [] INFO  ### stockCode : AAPL 
[2023-02-19T17:41:09.723] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 78616 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T17:41:09.724] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T17:41:10.218] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T17:41:10.474] [] INFO  Started PioneerClientTest in 1.097 seconds (JVM running for 2.397) 
[2023-02-19T17:41:10.992] [] INFO  ####### initialized server ### 
[2023-02-19T17:41:10.993] [] INFO  9443 started on port: 9443 
[2023-02-19T17:41:11.563] [] INFO  9443 creating expectation:

  {
    "id" : "feb75af7-2fc8-4bec-9856-890a30086e59",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  feb75af7-2fc8-4bec-9856-890a30086e59
 
[2023-02-19T17:41:12.284] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T17:41:12.286] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "feb75af7-2fc8-4bec-9856-890a30086e59",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T17:41:12.290] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  feb75af7-2fc8-4bec-9856-890a30086e59
 
[2023-02-19T17:41:12.307] [] INFO  ### stockCode : AAPL 
[2023-02-19T17:41:58.047] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 79082 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T17:41:58.049] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T17:41:58.502] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T17:41:58.749] [] INFO  Started PioneerClientTest in 1.029 seconds (JVM running for 2.275) 
[2023-02-19T17:41:59.240] [] INFO  ####### initialized server ### 
[2023-02-19T17:41:59.240] [] INFO  9443 started on port: 9443 
[2023-02-19T17:41:59.768] [] INFO  9443 creating expectation:

  {
    "id" : "30798a00-4d3b-468c-b956-88e3aa8eec57",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  30798a00-4d3b-468c-b956-88e3aa8eec57
 
[2023-02-19T17:42:00.105] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T17:42:00.107] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "30798a00-4d3b-468c-b956-88e3aa8eec57",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T17:42:00.111] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  30798a00-4d3b-468c-b956-88e3aa8eec57
 
[2023-02-19T17:42:00.127] [] INFO  ### stockCode : AAPL 
[2023-02-19T17:52:37.559] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 85887 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T17:52:37.560] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T17:52:38.038] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T17:52:38.279] [] INFO  Started PioneerClientTest in 1.074 seconds (JVM running for 2.399) 
[2023-02-19T17:52:38.810] [] INFO  ####### initialized server ### 
[2023-02-19T17:52:38.810] [] INFO  9443 started on port: 9443 
[2023-02-19T17:52:39.386] [] INFO  9443 creating expectation:

  {
    "id" : "9ff943d6-edd4-43c3-8835-730be7228404",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  9ff943d6-edd4-43c3-8835-730be7228404
 
[2023-02-19T17:52:40.041] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T17:52:40.044] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "9ff943d6-edd4-43c3-8835-730be7228404",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T17:52:40.047] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  9ff943d6-edd4-43c3-8835-730be7228404
 
[2023-02-19T17:52:40.066] [] INFO  ### stockCode : AAPL 
[2023-02-19T17:53:32.182] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 86449 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T17:53:32.183] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T17:53:32.670] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T17:53:32.918] [] INFO  Started PioneerClientTest in 1.087 seconds (JVM running for 3.562) 
[2023-02-19T17:53:33.451] [] INFO  ####### initialized server ### 
[2023-02-19T17:53:33.452] [] INFO  9443 started on port: 9443 
[2023-02-19T17:53:34.005] [] INFO  9443 creating expectation:

  {
    "id" : "a4d565a7-ed52-4d13-baaa-3ec011ffa50d",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  a4d565a7-ed52-4d13-baaa-3ec011ffa50d
 
[2023-02-19T17:53:34.364] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T17:53:34.367] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "a4d565a7-ed52-4d13-baaa-3ec011ffa50d",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T17:53:34.370] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  a4d565a7-ed52-4d13-baaa-3ec011ffa50d
 
[2023-02-19T17:53:34.387] [] INFO  ### stockCode : AAPL 
[2023-02-19T17:57:00.522] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 40] 
[2023-02-19T17:57:42.833] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 89115 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T17:57:42.835] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T17:57:43.827] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T17:57:44.334] [] INFO  Started PioneerClientTest in 1.898 seconds (JVM running for 3.252) 
[2023-02-19T17:57:45.128] [] INFO  ####### initialized server ### 
[2023-02-19T17:57:45.130] [] INFO  9443 started on port: 9443 
[2023-02-19T17:57:45.710] [] INFO  9443 creating expectation:

  {
    "id" : "d54eab24-6e1e-48dd-bbdc-3ad47c51f376",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  d54eab24-6e1e-48dd-bbdc-3ad47c51f376
 
[2023-02-19T17:57:46.343] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T17:57:46.345] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "d54eab24-6e1e-48dd-bbdc-3ad47c51f376",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T17:57:46.349] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  d54eab24-6e1e-48dd-bbdc-3ad47c51f376
 
[2023-02-19T17:57:46.366] [] INFO  ### stockCode : AAPL 
[2023-02-19T17:58:08.380] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 89348 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T17:58:08.382] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T17:58:08.904] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T17:58:09.155] [] INFO  Started PioneerClientTest in 1.163 seconds (JVM running for 3.498) 
[2023-02-19T17:58:10.034] [] INFO  ####### initialized server ### 
[2023-02-19T17:58:10.035] [] INFO  9443 started on port: 9443 
[2023-02-19T17:58:10.643] [] INFO  9443 creating expectation:

  {
    "id" : "03afce6e-96f1-4109-aa9d-188b7fdd6da0",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  03afce6e-96f1-4109-aa9d-188b7fdd6da0
 
[2023-02-19T17:58:10.973] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T17:58:10.976] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "03afce6e-96f1-4109-aa9d-188b7fdd6da0",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T17:58:10.980] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  03afce6e-96f1-4109-aa9d-188b7fdd6da0
 
[2023-02-19T17:58:10.996] [] INFO  ### stockCode : AAPL 
[2023-02-19T17:59:32.926] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 90237 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T17:59:32.927] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T17:59:33.414] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T17:59:33.665] [] INFO  Started PioneerClientTest in 1.094 seconds (JVM running for 3.497) 
[2023-02-19T17:59:34.221] [] INFO  ####### initialized server ### 
[2023-02-19T17:59:34.222] [] INFO  9443 started on port: 9443 
[2023-02-19T17:59:34.789] [] INFO  9443 creating expectation:

  {
    "id" : "95da1a21-d2bf-4959-91bb-c25f1ce61292",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  95da1a21-d2bf-4959-91bb-c25f1ce61292
 
[2023-02-19T17:59:35.255] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T17:59:35.259] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "95da1a21-d2bf-4959-91bb-c25f1ce61292",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T17:59:35.263] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  95da1a21-d2bf-4959-91bb-c25f1ce61292
 
[2023-02-19T17:59:35.283] [] INFO  ### stockCode : AAPL 
[2023-02-19T18:01:56.865] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 91798 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T18:01:56.866] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T18:01:57.349] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T18:01:57.596] [] INFO  Started PioneerClientTest in 1.076 seconds (JVM running for 2.417) 
[2023-02-19T18:01:58.164] [] INFO  ####### initialized server ### 
[2023-02-19T18:01:58.165] [] INFO  9443 started on port: 9443 
[2023-02-19T18:01:59.003] [] INFO  9443 creating expectation:

  {
    "id" : "89b3697a-3841-41e0-89b7-d2953503748d",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  89b3697a-3841-41e0-89b7-d2953503748d
 
[2023-02-19T18:01:59.476] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T18:01:59.479] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "89b3697a-3841-41e0-89b7-d2953503748d",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T18:01:59.482] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  89b3697a-3841-41e0-89b7-d2953503748d
 
[2023-02-19T18:01:59.500] [] INFO  ### stockCode : AAPL 
[2023-02-19T18:08:40.696] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 96061 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T18:08:40.697] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T18:08:41.185] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T18:08:41.445] [] INFO  Started PioneerClientTest in 1.096 seconds (JVM running for 2.745) 
[2023-02-19T18:08:42.004] [] INFO  ####### initialized server ### 
[2023-02-19T18:08:42.005] [] INFO  9443 started on port: 9443 
[2023-02-19T18:08:42.565] [] INFO  9443 creating expectation:

  {
    "id" : "fc6d432b-f96f-4f33-873e-13c8f56bd99e",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  fc6d432b-f96f-4f33-873e-13c8f56bd99e
 
[2023-02-19T18:08:43.202] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T18:08:43.205] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "fc6d432b-f96f-4f33-873e-13c8f56bd99e",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T18:08:43.208] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  fc6d432b-f96f-4f33-873e-13c8f56bd99e
 
[2023-02-19T18:08:43.225] [] INFO  ### stockCode : AAPL 
[2023-02-19T18:09:03.823] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 96286 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T18:09:03.825] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T18:09:04.335] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T18:09:04.623] [] INFO  Started PioneerClientTest in 1.149 seconds (JVM running for 2.484) 
[2023-02-19T18:09:05.488] [] INFO  ####### initialized server ### 
[2023-02-19T18:09:05.489] [] INFO  9443 started on port: 9443 
[2023-02-19T18:09:06.222] [] INFO  9443 creating expectation:

  {
    "id" : "7325131c-1270-43a5-a9b1-866b86ec226c",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  7325131c-1270-43a5-a9b1-866b86ec226c
 
[2023-02-19T18:09:06.579] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T18:09:06.582] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "7325131c-1270-43a5-a9b1-866b86ec226c",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T18:09:06.586] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1\"}"
  }

 from expectation:

  7325131c-1270-43a5-a9b1-866b86ec226c
 
[2023-02-19T18:09:06.603] [] INFO  ### stockCode : AAPL 
[2023-02-19T18:09:06.613] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 40] 
[2023-02-19T18:27:24.417] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 8440 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T18:27:24.419] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T18:27:24.875] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T18:27:25.110] [] INFO  Started PioneerClientTest in 1.045 seconds (JVM running for 2.267) 
[2023-02-19T18:27:25.647] [] INFO  ####### initialized server ### 
[2023-02-19T18:27:25.648] [] INFO  9443 started on port: 9443 
[2023-02-19T18:27:26.209] [] INFO  9443 creating expectation:

  {
    "id" : "ee8f83a6-66ee-4848-87ea-5ff2d1c3f78a",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  ee8f83a6-66ee-4848-87ea-5ff2d1c3f78a
 
[2023-02-19T18:27:26.868] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T18:27:26.871] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "ee8f83a6-66ee-4848-87ea-5ff2d1c3f78a",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T18:27:26.875] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  ee8f83a6-66ee-4848-87ea-5ff2d1c3f78a
 
[2023-02-19T18:27:26.893] [] INFO  ### stockCode : AAPL 
[2023-02-19T18:27:26.903] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 43] 
[2023-02-19T18:31:29.041] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 11020 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T18:31:29.042] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T18:31:29.499] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T18:31:29.752] [] INFO  Started PioneerClientTest in 1.033 seconds (JVM running for 2.321) 
[2023-02-19T18:31:30.299] [] INFO  ####### initialized server ### 
[2023-02-19T18:31:30.300] [] INFO  9443 started on port: 9443 
[2023-02-19T18:31:30.856] [] INFO  9443 creating expectation:

  {
    "id" : "8c632b39-cee3-4958-81a6-e15dacd6577c",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  8c632b39-cee3-4958-81a6-e15dacd6577c
 
[2023-02-19T18:31:31.293] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T18:31:31.296] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "8c632b39-cee3-4958-81a6-e15dacd6577c",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T18:31:31.300] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  8c632b39-cee3-4958-81a6-e15dacd6577c
 
[2023-02-19T18:31:31.316] [] INFO  ### stockCode : AAPL 
[2023-02-19T18:37:09.536] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 14715 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T18:37:09.538] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T18:37:10.009] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T18:37:10.234] [] INFO  Started PioneerClientTest in 1.152 seconds (JVM running for 3.325) 
[2023-02-19T18:37:10.726] [] INFO  ####### initialized server ### 
[2023-02-19T18:37:10.727] [] INFO  9443 started on port: 9443 
[2023-02-19T18:37:10.766] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 
[2023-02-19T18:37:11.258] [] INFO  9443 creating expectation:

  {
    "id" : "868a81c0-81e4-4e40-9863-6666d3199b48",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  868a81c0-81e4-4e40-9863-6666d3199b48
 
[2023-02-19T18:37:11.687] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T18:37:11.690] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "868a81c0-81e4-4e40-9863-6666d3199b48",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T18:37:11.693] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  868a81c0-81e4-4e40-9863-6666d3199b48
 
[2023-02-19T18:37:11.710] [] INFO  ### stockCode : AAPL 
[2023-02-19T18:37:11.719] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 43] 
[2023-02-19T18:38:33.610] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 15611 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T18:38:33.611] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T18:38:34.044] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T18:38:34.274] [] INFO  Started PioneerClientTest in 0.986 seconds (JVM running for 2.186) 
[2023-02-19T18:38:34.760] [] INFO  ####### initialized server ### 
[2023-02-19T18:38:34.761] [] INFO  9443 started on port: 9443 
[2023-02-19T18:38:34.817] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T18:38:35.437] [] INFO  9443 creating expectation:

  {
    "id" : "f7efd2d2-aaa3-4610-8ac9-57c01c0b2ca3",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  f7efd2d2-aaa3-4610-8ac9-57c01c0b2ca3
 
[2023-02-19T18:38:36.048] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T18:38:36.054] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "f7efd2d2-aaa3-4610-8ac9-57c01c0b2ca3",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T18:38:36.059] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  f7efd2d2-aaa3-4610-8ac9-57c01c0b2ca3
 
[2023-02-19T18:38:36.135] [] INFO  ### stockCode : AAPL 
[2023-02-19T18:38:36.183] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 43] 
[2023-02-19T18:47:06.259] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 20987 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T18:47:06.261] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T18:47:06.714] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T18:47:06.945] [] INFO  Started PioneerClientTest in 1.031 seconds (JVM running for 2.221) 
[2023-02-19T18:47:07.523] [] INFO  ####### initialized server ### 
[2023-02-19T18:47:07.524] [] INFO  9443 started on port: 9443 
[2023-02-19T18:47:07.557] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T18:47:08.094] [] INFO  9443 creating expectation:

  {
    "id" : "dd249bcd-5143-4ef7-b256-784bb418baec",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  dd249bcd-5143-4ef7-b256-784bb418baec
 
[2023-02-19T18:47:08.736] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T18:47:08.739] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "dd249bcd-5143-4ef7-b256-784bb418baec",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T18:47:08.741] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  dd249bcd-5143-4ef7-b256-784bb418baec
 
[2023-02-19T18:47:08.757] [] INFO  ### stockCode : AAPL 
[2023-02-19T18:47:08.766] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 43] 
[2023-02-19T18:47:31.697] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 21217 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T18:47:31.698] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T18:47:32.122] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T18:47:32.343] [] INFO  Started PioneerClientTest in 0.951 seconds (JVM running for 2.082) 
[2023-02-19T18:47:32.789] [] INFO  ####### initialized server ### 
[2023-02-19T18:47:32.790] [] INFO  9443 started on port: 9443 
[2023-02-19T18:47:32.828] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T18:47:33.276] [] INFO  9443 creating expectation:

  {
    "id" : "3dd6acc2-00e9-4281-9ff0-c310769a7eee",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  3dd6acc2-00e9-4281-9ff0-c310769a7eee
 
[2023-02-19T18:47:33.589] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T18:47:33.591] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "3dd6acc2-00e9-4281-9ff0-c310769a7eee",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T18:47:33.595] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  3dd6acc2-00e9-4281-9ff0-c310769a7eee
 
[2023-02-19T18:47:33.621] [] INFO  ### 13.1123, 5 
[2023-02-19T19:04:28.130] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 32022 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:04:28.131] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:04:28.620] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:04:28.875] [] INFO  Started PioneerClientTest in 1.095 seconds (JVM running for 2.408) 
[2023-02-19T19:04:42.745] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 32138 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:04:42.746] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:04:43.212] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:04:43.456] [] INFO  Started PioneerClientTest in 1.03 seconds (JVM running for 2.293) 
[2023-02-19T19:04:43.976] [] INFO  ####### initialized server ### 
[2023-02-19T19:04:43.977] [] INFO  9443 started on port: 9443 
[2023-02-19T19:04:44.018] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T19:13:17.779] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 37588 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:13:17.780] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:13:18.277] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:13:18.527] [] INFO  Started PioneerClientTest in 1.08 seconds (JVM running for 2.422) 
[2023-02-19T19:13:19.062] [] INFO  ####### initialized server ### 
[2023-02-19T19:13:19.063] [] INFO  9443 started on port: 9443 
[2023-02-19T19:13:19.108] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T19:13:29.151] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 37704 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:13:29.152] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:13:29.600] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:13:29.849] [] INFO  Started PioneerClientTest in 1.026 seconds (JVM running for 2.291) 
[2023-02-19T19:13:30.342] [] INFO  ####### initialized server ### 
[2023-02-19T19:13:30.343] [] INFO  9443 started on port: 9443 
[2023-02-19T19:13:30.386] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T19:13:30.898] [] INFO  9443 creating expectation:

  {
    "id" : "9ef5d386-e122-45c2-83ec-0c372bcecd1d",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  9ef5d386-e122-45c2-83ec-0c372bcecd1d
 
[2023-02-19T19:13:31.543] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T19:13:31.546] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "9ef5d386-e122-45c2-83ec-0c372bcecd1d",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T19:13:31.549] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  9ef5d386-e122-45c2-83ec-0c372bcecd1d
 
[2023-02-19T19:13:31.566] [] INFO  ### stockCode : AAPL 
[2023-02-19T19:15:40.482] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 39042 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:15:40.484] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:15:40.976] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:15:41.237] [] INFO  Started PioneerClientTest in 1.091 seconds (JVM running for 2.58) 
[2023-02-19T19:15:41.771] [] INFO  ####### initialized server ### 
[2023-02-19T19:15:41.772] [] INFO  9443 started on port: 9443 
[2023-02-19T19:15:41.815] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T19:15:42.346] [] INFO  9443 creating expectation:

  {
    "id" : "80d7478e-3e96-45a0-953a-886bc4fbbda9",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  80d7478e-3e96-45a0-953a-886bc4fbbda9
 
[2023-02-19T19:15:42.825] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T19:15:42.828] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "80d7478e-3e96-45a0-953a-886bc4fbbda9",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T19:15:42.831] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  80d7478e-3e96-45a0-953a-886bc4fbbda9
 
[2023-02-19T19:15:42.848] [] INFO  ### stockCode : AAPL 
[2023-02-19T19:15:59.486] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 39264 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:15:59.488] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:15:59.916] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:16:00.129] [] INFO  Started PioneerClientTest in 0.961 seconds (JVM running for 2.104) 
[2023-02-19T19:16:00.603] [] INFO  ####### initialized server ### 
[2023-02-19T19:16:00.604] [] INFO  9443 started on port: 9443 
[2023-02-19T19:16:00.648] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T19:16:01.111] [] INFO  9443 creating expectation:

  {
    "id" : "cf7461f7-8658-4a30-9a27-9050929a7765",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  cf7461f7-8658-4a30-9a27-9050929a7765
 
[2023-02-19T19:16:01.432] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T19:16:01.435] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "cf7461f7-8658-4a30-9a27-9050929a7765",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T19:16:01.439] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  cf7461f7-8658-4a30-9a27-9050929a7765
 
[2023-02-19T19:16:01.456] [] INFO  ### stockCode : AAPL 
[2023-02-19T19:16:01.466] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 43] 
[2023-02-19T19:32:53.486] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 50021 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:32:53.490] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:32:53.974] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:32:54.203] [] INFO  Started PioneerClientTest in 1.072 seconds (JVM running for 2.252) 
[2023-02-19T19:32:54.782] [] INFO  ####### initialized server ### 
[2023-02-19T19:32:54.783] [] INFO  9443 started on port: 9443 
[2023-02-19T19:32:54.814] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T19:32:55.337] [] INFO  9443 creating expectation:

  {
    "id" : "da23d76f-f526-452f-ae0a-fba50a4ebc12",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  da23d76f-f526-452f-ae0a-fba50a4ebc12
 
[2023-02-19T19:32:55.847] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/domestic",
    "queryStringParameters" : {
      "fid_input_iscd" : [ "12393" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T19:32:55.849] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/domestic",
    "queryStringParameters" : {
      "fid_input_iscd" : [ "12393" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 didn't match expectation:

  {
    "id" : "da23d76f-f526-452f-ae0a-fba50a4ebc12",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 because:

  method matched
  path didn't match
 
[2023-02-19T19:32:55.852] [] INFO  9443 no expectation for:

  {
    "method" : "GET",
    "path" : "/price/domestic",
    "queryStringParameters" : {
      "fid_input_iscd" : [ "12393" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 returning response:

  {
    "statusCode" : 404,
    "reasonPhrase" : "Not Found"
  }
 
[2023-02-19T19:32:55.876] [] INFO  nothing 404 Not Found from GET http://localhost:9443/price/domestic?fid_input_iscd=12393 
[2023-02-19T19:33:08.071] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 50244 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:33:08.073] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:33:08.499] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:33:08.716] [] INFO  Started PioneerClientTest in 0.952 seconds (JVM running for 2.052) 
[2023-02-19T19:33:09.172] [] INFO  ####### initialized server ### 
[2023-02-19T19:33:09.172] [] INFO  9443 started on port: 9443 
[2023-02-19T19:33:09.205] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T19:33:09.654] [] INFO  9443 creating expectation:

  {
    "id" : "c43c7503-2887-47aa-b970-cdbb7ad9db96",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  c43c7503-2887-47aa-b970-cdbb7ad9db96
 
[2023-02-19T19:33:09.713] [] INFO  9443 creating expectation:

  {
    "id" : "07b8dcfc-84bc-4032-b73b-d37321fe740f",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  07b8dcfc-84bc-4032-b73b-d37321fe740f
 
[2023-02-19T19:33:10.024] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/domestic",
    "queryStringParameters" : {
      "fid_input_iscd" : [ "12393" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T19:33:10.026] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/domestic",
    "queryStringParameters" : {
      "fid_input_iscd" : [ "12393" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 didn't match expectation:

  {
    "id" : "c43c7503-2887-47aa-b970-cdbb7ad9db96",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 because:

  method matched
  path didn't match
 
[2023-02-19T19:33:10.028] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/domestic",
    "queryStringParameters" : {
      "fid_input_iscd" : [ "12393" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "07b8dcfc-84bc-4032-b73b-d37321fe740f",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T19:33:10.031] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/domestic",
    "queryStringParameters" : {
      "fid_input_iscd" : [ "12393" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}"
  }

 from expectation:

  07b8dcfc-84bc-4032-b73b-d37321fe740f
 
[2023-02-19T19:33:10.047] [] INFO  ### stockCode : null 
[2023-02-19T19:33:10.054] [] INFO  nothing JSON decoding error: Unknown signal type: null; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unknown signal type: null 
[2023-02-19T19:34:06.827] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 50817 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:34:06.832] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:34:07.272] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:34:07.491] [] INFO  Started PioneerClientTest in 0.99 seconds (JVM running for 2.117) 
[2023-02-19T19:34:07.943] [] INFO  ####### initialized server ### 
[2023-02-19T19:34:07.944] [] INFO  9443 started on port: 9443 
[2023-02-19T19:34:07.977] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T19:34:08.449] [] INFO  9443 creating expectation:

  {
    "id" : "95b8911e-f8a3-46d0-a877-bc89a9fe7879",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  95b8911e-f8a3-46d0-a877-bc89a9fe7879
 
[2023-02-19T19:34:08.508] [] INFO  9443 creating expectation:

  {
    "id" : "7d142289-306d-4fd3-a564-a73fcb8e313f",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  7d142289-306d-4fd3-a564-a73fcb8e313f
 
[2023-02-19T19:34:09.206] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/domestic",
    "queryStringParameters" : {
      "fid_input_iscd" : [ "12393" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T19:34:09.208] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/domestic",
    "queryStringParameters" : {
      "fid_input_iscd" : [ "12393" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 didn't match expectation:

  {
    "id" : "95b8911e-f8a3-46d0-a877-bc89a9fe7879",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 because:

  method matched
  path didn't match
 
[2023-02-19T19:34:09.210] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/domestic",
    "queryStringParameters" : {
      "fid_input_iscd" : [ "12393" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "7d142289-306d-4fd3-a564-a73fcb8e313f",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12393" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T19:34:09.213] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/domestic",
    "queryStringParameters" : {
      "fid_input_iscd" : [ "12393" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}"
  }

 from expectation:

  7d142289-306d-4fd3-a564-a73fcb8e313f
 
[2023-02-19T19:34:09.228] [] INFO  ### stockCode : null 
[2023-02-19T19:34:09.240] [] INFO  nothing JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$DomesticPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$DomesticPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 34] 
[2023-02-19T19:47:30.481] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 59298 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:47:30.482] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:47:30.926] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:47:31.158] [] INFO  Started PioneerClientTest in 0.997 seconds (JVM running for 2.145) 
[2023-02-19T19:47:31.628] [] INFO  ####### initialized server ### 
[2023-02-19T19:47:31.629] [] INFO  9443 started on port: 9443 
[2023-02-19T19:47:31.669] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T19:47:32.124] [] INFO  9443 creating expectation:

  {
    "id" : "565cc968-93fc-4539-817b-7781998d0eb5",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  565cc968-93fc-4539-817b-7781998d0eb5
 
[2023-02-19T19:47:32.689] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T19:47:32.692] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "565cc968-93fc-4539-817b-7781998d0eb5",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T19:47:32.695] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  565cc968-93fc-4539-817b-7781998d0eb5
 
[2023-02-19T19:47:32.710] [] INFO  ### stockCode : AAPL 
[2023-02-19T19:47:32.723] [] ERROR Operator called default onErrorDropped 
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.core.codec.DecodingException: JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 43]
Caused by: org.springframework.core.codec.DecodingException: JSON decoding error: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 43]
	at org.springframework.http.codec.json.AbstractJackson2Decoder.processException(AbstractJackson2Decoder.java:242)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET http://localhost:9443/price/oversea?symb=AAPL [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.http.codec.json.AbstractJackson2Decoder.processException(AbstractJackson2Decoder.java:242)
		at org.springframework.http.codec.json.AbstractJackson2Decoder.decode(AbstractJackson2Decoder.java:198)
		at org.springframework.http.codec.json.AbstractJackson2Decoder.lambda$decodeToMono$1(AbstractJackson2Decoder.java:179)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:424)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:478)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:712)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:113)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Unexpected end-of-input when trying read value of type `com.brandon.practice.client.PriceApiTemplate$OverseaPriceRequest$Response`
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 43]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1741)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1515)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1462)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.DeserializationContext.readValue(DeserializationContext.java:966)
	at com.fasterxml.jackson.databind.DeserializationContext.readValue(DeserializationContext.java:953)
	at com.brandon.practice.domain.PriceInfoDeserializer.deserialize(PriceInfoDeserializer.kt:21)
	at com.brandon.practice.domain.PriceInfoDeserializer.deserialize(PriceInfoDeserializer.kt:11)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2051)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1427)
	at org.springframework.http.codec.json.AbstractJackson2Decoder.decode(AbstractJackson2Decoder.java:193)
	at org.springframework.http.codec.json.AbstractJackson2Decoder.lambda$decodeToMono$1(AbstractJackson2Decoder.java:179)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:424)
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:478)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:712)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:113)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2023-02-19T19:47:57.940] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 59632 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:47:57.941] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:47:58.370] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:47:58.578] [] INFO  Started PioneerClientTest in 0.953 seconds (JVM running for 2.056) 
[2023-02-19T19:47:59.011] [] INFO  ####### initialized server ### 
[2023-02-19T19:47:59.012] [] INFO  9443 started on port: 9443 
[2023-02-19T19:47:59.040] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T19:47:59.467] [] INFO  9443 creating expectation:

  {
    "id" : "c54967f3-87f6-45c9-a745-8766d3198d0b",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  c54967f3-87f6-45c9-a745-8766d3198d0b
 
[2023-02-19T19:47:59.888] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T19:47:59.890] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "c54967f3-87f6-45c9-a745-8766d3198d0b",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T19:47:59.893] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  c54967f3-87f6-45c9-a745-8766d3198d0b
 
[2023-02-19T19:47:59.917] [] ERROR Operator called default onErrorDropped 
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.core.codec.CodecException: Type definition error: [simple type, class com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate` (no Creators, like default constructor, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 1]
Caused by: org.springframework.core.codec.CodecException: Type definition error: [simple type, class com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate` (no Creators, like default constructor, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 1]
	at org.springframework.http.codec.json.AbstractJackson2Decoder.processException(AbstractJackson2Decoder.java:238)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET http://localhost:9443/price/oversea?symb=AAPL [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.http.codec.json.AbstractJackson2Decoder.processException(AbstractJackson2Decoder.java:238)
		at org.springframework.http.codec.json.AbstractJackson2Decoder.decode(AbstractJackson2Decoder.java:198)
		at org.springframework.http.codec.json.AbstractJackson2Decoder.lambda$decodeToMono$1(AbstractJackson2Decoder.java:179)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:424)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:478)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:712)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:113)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate` (no Creators, like default constructor, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1904)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:400)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1349)
	at com.fasterxml.jackson.databind.deser.AbstractDeserializer.deserialize(AbstractDeserializer.java:274)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2051)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1427)
	at org.springframework.http.codec.json.AbstractJackson2Decoder.decode(AbstractJackson2Decoder.java:193)
	at org.springframework.http.codec.json.AbstractJackson2Decoder.lambda$decodeToMono$1(AbstractJackson2Decoder.java:179)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:424)
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:478)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:712)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:113)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2023-02-19T19:49:16.958] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 60423 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:49:16.960] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:49:17.386] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:49:17.600] [] INFO  Started PioneerClientTest in 0.955 seconds (JVM running for 2.131) 
[2023-02-19T19:49:18.050] [] INFO  ####### initialized server ### 
[2023-02-19T19:49:18.051] [] INFO  9443 started on port: 9443 
[2023-02-19T19:49:18.090] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T19:49:18.541] [] INFO  9443 creating expectation:

  {
    "id" : "dcbcf693-c0ad-43b0-b490-25a5c73bcf45",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  dcbcf693-c0ad-43b0-b490-25a5c73bcf45
 
[2023-02-19T19:49:19.044] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T19:49:19.046] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "dcbcf693-c0ad-43b0-b490-25a5c73bcf45",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T19:49:19.049] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  dcbcf693-c0ad-43b0-b490-25a5c73bcf45
 
[2023-02-19T19:49:19.070] [] ERROR Operator called default onErrorDropped 
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.core.codec.CodecException: Type definition error: [simple type, class com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate` (no Creators, like default constructor, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 1]
Caused by: org.springframework.core.codec.CodecException: Type definition error: [simple type, class com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate` (no Creators, like default constructor, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 1]
	at org.springframework.http.codec.json.AbstractJackson2Decoder.processException(AbstractJackson2Decoder.java:238)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET http://localhost:9443/price/oversea?symb=AAPL [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.http.codec.json.AbstractJackson2Decoder.processException(AbstractJackson2Decoder.java:238)
		at org.springframework.http.codec.json.AbstractJackson2Decoder.decode(AbstractJackson2Decoder.java:198)
		at org.springframework.http.codec.json.AbstractJackson2Decoder.lambda$decodeToMono$1(AbstractJackson2Decoder.java:179)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:424)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:478)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:712)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:113)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate` (no Creators, like default constructor, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1904)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:400)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1349)
	at com.fasterxml.jackson.databind.deser.AbstractDeserializer.deserialize(AbstractDeserializer.java:274)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2051)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1427)
	at org.springframework.http.codec.json.AbstractJackson2Decoder.decode(AbstractJackson2Decoder.java:193)
	at org.springframework.http.codec.json.AbstractJackson2Decoder.lambda$decodeToMono$1(AbstractJackson2Decoder.java:179)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:424)
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:478)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:712)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:113)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2023-02-19T19:49:48.169] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 60770 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:49:48.170] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:49:48.622] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:49:48.860] [] INFO  Started PioneerClientTest in 1.016 seconds (JVM running for 2.15) 
[2023-02-19T19:49:49.352] [] INFO  ####### initialized server ### 
[2023-02-19T19:49:49.353] [] INFO  9443 started on port: 9443 
[2023-02-19T19:49:49.392] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T19:49:49.884] [] INFO  9443 creating expectation:

  {
    "id" : "d272010a-d350-48f5-be48-a9ae1de82b2d",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  d272010a-d350-48f5-be48-a9ae1de82b2d
 
[2023-02-19T19:49:49.945] [] INFO  9443 creating expectation:

  {
    "id" : "9761f70a-8ecf-44c0-aa01-5b8995866910",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12324" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  9761f70a-8ecf-44c0-aa01-5b8995866910
 
[2023-02-19T19:49:50.398] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T19:49:50.401] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "d272010a-d350-48f5-be48-a9ae1de82b2d",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T19:49:50.404] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  d272010a-d350-48f5-be48-a9ae1de82b2d
 
[2023-02-19T19:49:50.428] [] ERROR Operator called default onErrorDropped 
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.core.codec.CodecException: Type definition error: [simple type, class com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate` (no Creators, like default constructor, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 1]
Caused by: org.springframework.core.codec.CodecException: Type definition error: [simple type, class com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate` (no Creators, like default constructor, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 1]
	at org.springframework.http.codec.json.AbstractJackson2Decoder.processException(AbstractJackson2Decoder.java:238)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET http://localhost:9443/price/oversea?symb=AAPL [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.http.codec.json.AbstractJackson2Decoder.processException(AbstractJackson2Decoder.java:238)
		at org.springframework.http.codec.json.AbstractJackson2Decoder.decode(AbstractJackson2Decoder.java:198)
		at org.springframework.http.codec.json.AbstractJackson2Decoder.lambda$decodeToMono$1(AbstractJackson2Decoder.java:179)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:424)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:478)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:712)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:113)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate` (no Creators, like default constructor, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1904)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:400)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1349)
	at com.fasterxml.jackson.databind.deser.AbstractDeserializer.deserialize(AbstractDeserializer.java:274)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2051)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1427)
	at org.springframework.http.codec.json.AbstractJackson2Decoder.decode(AbstractJackson2Decoder.java:193)
	at org.springframework.http.codec.json.AbstractJackson2Decoder.lambda$decodeToMono$1(AbstractJackson2Decoder.java:179)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:424)
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:478)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:712)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:113)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2023-02-19T19:50:54.872] [] INFO  Starting PioneerClientTest using Java 17.0.1 on brandonkwon.local with PID 61440 (started by kakao in /Users/kakao/yjgit/kotlinPractice/practice) 
[2023-02-19T19:50:54.873] [] INFO  The following 1 profile is active: "prod" 
[2023-02-19T19:50:55.340] [] INFO  Initializing HantooClient with ClientProperties(enable=true, server=http://localhost:9443, timeout=PT3S) 
[2023-02-19T19:50:55.585] [] INFO  Started PioneerClientTest in 1.045 seconds (JVM running for 2.369) 
[2023-02-19T19:50:56.098] [] INFO  ####### initialized server ### 
[2023-02-19T19:50:56.099] [] INFO  9443 started on port: 9443 
[2023-02-19T19:50:56.142] [] INFO  response string : {"stockCd":"AAPL","overseaPrice":"13.1123"} 1(") 
[2023-02-19T19:50:56.653] [] INFO  9443 creating expectation:

  {
    "id" : "2fe5bb57-d370-43cc-920c-82e9650c252c",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  2fe5bb57-d370-43cc-920c-82e9650c252c
 
[2023-02-19T19:50:56.716] [] INFO  9443 creating expectation:

  {
    "id" : "8638576a-be9c-487d-b7ca-5f2670ea43f8",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/domestic",
      "queryStringParameters" : {
        "fid_input_iscd" : [ "12324" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"price\":\"12393\",\"priceUnit\":\"10\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }

 with id:

  8638576a-be9c-487d-b7ca-5f2670ea43f8
 
[2023-02-19T19:51:14.293] [] INFO  9443 received request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }
 
[2023-02-19T19:51:14.303] [] INFO  9443 request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 matched expectation:

  {
    "id" : "2fe5bb57-d370-43cc-920c-82e9650c252c",
    "priority" : 0,
    "httpRequest" : {
      "method" : "GET",
      "path" : "/price/oversea",
      "queryStringParameters" : {
        "symb" : [ "AAPL" ]
      }
    },
    "times" : {
      "unlimited" : true
    },
    "timeToLive" : {
      "unlimited" : true
    },
    "httpResponse" : {
      "statusCode" : 200,
      "body" : {
        "type" : "STRING",
        "string" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}",
        "contentType" : "application/json; charset=utf-8"
      }
    }
  }
 
[2023-02-19T19:51:14.309] [] INFO  9443 returning response:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 for request:

  {
    "method" : "GET",
    "path" : "/price/oversea",
    "queryStringParameters" : {
      "symb" : [ "AAPL" ]
    },
    "headers" : {
      "accept-encoding" : [ "gzip" ],
      "user-agent" : [ "ReactorNetty/1.0.27" ],
      "host" : [ "localhost:9443" ],
      "accept" : [ "*/*" ],
      "contentType" : [ "application/json" ],
      "Connection" : [ "close" ],
      "content-length" : [ "0" ]
    },
    "keepAlive" : false,
    "secure" : false
  }

 for action:

  {
    "statusCode" : 200,
    "body" : "{\"stockCd\":\"AAPL\",\"overseaPrice\":\"13.1123\"}"
  }

 from expectation:

  2fe5bb57-d370-43cc-920c-82e9650c252c
 
[2023-02-19T19:51:14.335] [] ERROR Operator called default onErrorDropped 
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.core.codec.CodecException: Type definition error: [simple type, class com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate` (no Creators, like default constructor, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 1]
Caused by: org.springframework.core.codec.CodecException: Type definition error: [simple type, class com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate` (no Creators, like default constructor, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 1]
	at org.springframework.http.codec.json.AbstractJackson2Decoder.processException(AbstractJackson2Decoder.java:238)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET http://localhost:9443/price/oversea?symb=AAPL [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.http.codec.json.AbstractJackson2Decoder.processException(AbstractJackson2Decoder.java:238)
		at org.springframework.http.codec.json.AbstractJackson2Decoder.decode(AbstractJackson2Decoder.java:198)
		at org.springframework.http.codec.json.AbstractJackson2Decoder.lambda$decodeToMono$1(AbstractJackson2Decoder.java:179)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:424)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:478)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:712)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:113)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.brandon.practice.client.PriceApiTemplate$PriceResponseTemplate` (no Creators, like default constructor, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1904)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:400)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1349)
	at com.fasterxml.jackson.databind.deser.AbstractDeserializer.deserialize(AbstractDeserializer.java:274)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2051)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1427)
	at org.springframework.http.codec.json.AbstractJackson2Decoder.decode(AbstractJackson2Decoder.java:193)
	at org.springframework.http.codec.json.AbstractJackson2Decoder.lambda$decodeToMono$1(AbstractJackson2Decoder.java:179)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1839)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:424)
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:478)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:712)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:113)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
